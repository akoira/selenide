allprojects {
  tasks.withType(Jar) {
    manifest {
      attributes(
        "Automatic-Module-Name": project.group + '.' + project.name,
        "Implementation-Title": project.group + '.' + project.name,
        "Implementation-Version": archiveVersion,
        "Implementation-Vendor": "selenide.org")
    }
  }
  tasks.withType(Javadoc) {
    failOnError = false
  }
}

task allprojectsJar(type: Jar, dependsOn: classes) {
  from allprojects.sourceSets.main.output
}

task allprojectsSourcesJar(type: Jar) {
  classifier = 'sources'
  from allprojects.sourceSets.main.allSource
}

task allprojectsJavadoc(type: Javadoc) {
  source = allprojects.sourceSets.main.allJava
}

task allprojectsJavadocJar(type: Jar) {
  classifier = 'javadoc'
  from allprojectsJavadoc.destinationDir
}

artifacts {
  archives allprojectsJar
  archives allprojectsSourcesJar
  archives allprojectsJavadocJar
}


publishing {
  publications {
    jar(MavenPublication) {
      from components.java
      artifact sourcesJar
      artifact javadocJar
    }
  }
  repositories {
    maven {
      if (project.version.endsWith('-SNAPSHOT')) {
        url project.property("maven.snapshot.url")
      } else {
        url project.property("maven.publish.url")
      }
      credentials {
        username = project.property("maven.publish.user")
        password = project.property("maven.publish.password")
      }
    }
  }
}

